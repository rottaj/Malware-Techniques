//
// Created by j4ck on 3/6/24.
//

#ifndef UDLR_UTILS_H
#define UDLR_UTILS_H


HMODULE GetModuleHandleWd(LPWSTR lpModuleName);


FARPROC GetProcAddressWd(HMODULE hModule, LPCSTR lpProcName);



HMODULE GetModuleHandleH(UINT32 uModuleHash);


FARPROC GetProcAddressH(HMODULE hModule, UINT32 uApiHash);

#define MemSet          __stosb




typedef BOOL (WINAPI* fnHeapFree)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem);

typedef LPVOID (WINAPI* fnHeapAlloc)(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes);

typedef HANDLE (WINAPI* fnGetProcessHeap)();

typedef HMODULE (WINAPI* fnLoadLibraryA)(LPCSTR lpLibFileName);

typedef LPVOID (WINAPI* fnVirtualAlloc)(LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect);

typedef BOOL (WINAPI* fnVirtualProtect)(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect);

typedef BOOLEAN (WINAPI* fnRtlAddFunctionTable)(PRUNTIME_FUNCTION FunctionTable, DWORD EntryCount, DWORD64 BaseAddress);

typedef NTSTATUS (NTAPI* fnNtFlushInstructionCache)(HANDLE hProcess, PVOID BaseAddress, ULONG NumberOfBytesToFlush);

typedef BOOL(WINAPI* fnDllMain)(HINSTANCE, DWORD, LPVOID);



/* For debugging Reflective DLL Loader */

typedef int (*fn_vsnprintf)(char *buffer, size_t count, const char *format, va_list argptr);

typedef int (*fnprintf)(const char *format, ...);

typedef int (WINAPI* fnAllocConsole)(void);


typedef void (WINAPI* fnOutputDebugString) (LPCSTR lpOutputString);

typedef HANDLE (WINAPI* fnGetStdHandle)(DWORD nStdHandle);

typedef FILE* (*fn_fdopen)(int fd,const char *mode); // might not work test this if breaking ( add * )

typedef int (*fn_open_osfhandle )(intptr_t osfhandle, int flags);

typedef int (*fnsetvbuf)(FILE *stream, char *buffer, int mode, size_t size);



#define LoadLibraryA_CRC32				0x3FC1BD8D
#define VirtualAlloc_CRC32				0x09CE0D4A
#define VirtualProtect_CRC32			0x10066F2F
#define RtlAddFunctionTable_CRC32       0x4C3CB59B
#define NtFlushInstructionCache_CRC32   0x85BF2F9C

#define kernel32dll_CRC32				0x6AE69F02
#define ntdlldll_CRC32					0x84C05E40
#define AllocConsole_CRC32              0xf86a1d88

#define msvcrtdll_CRC32                 0x161b8e25
#define printf_CRC32                    0xd21739f1
#define vsnprintf_CRC32                 0xff339768


#define HeapAlloc_CRC32                 0x5edb1d72
#define HeapFree_CRC32                  0xb0f6e8a9
#define GetProcessHeap_CRC32            0x40f6426d

/* For debugging Reflective DLL */

#define OutputDebugString_CRC32         0x2b0b47a5


#define _fdopen_CRC32                   0x7fda2752

#define _open_oshandle_CRC32            0xfe123853

#define GetStdHandle_CRC32              0xdadd89eb

#define setvbuf_CRC32                   0xe71964fe

#define w "w"

#endif //UDLR_UTILS_H
