#include <windows.h>
//#include <ntdef.h>
#include <winternl.h>
/*
typedef struct {
    HANDLE UniqueProcess;
    HANDLE UniqueThread;
} CLIENT_ID;
*/

typedef NTSTATUS (NTAPI* NtOpenProcess)(
        OUT          PHANDLE              ProcessHandle,
        IN           DWORD                DesiredAccess,
        IN           POBJECT_ATTRIBUTES   ObjectAttributes,
        IN OPTIONAL  PCLIENT_ID           ClientId
);

typedef NTSTATUS (NTAPI* NtAllocateVirtualMemory) (
        IN          PHANDLE        ProcessHandle,
        IN OUT      PVOID         BaseAddress,
        IN          ULONG_PTR     ZeroBits,
        IN OUT      SIZE_T        pRegionSize,
        IN          ULONG         AllocationType,
        IN          ULONG         Protect
 );

typedef NTSTATUS (NTAPI* NtProtectVirtualMemory)(
        IN          HANDLE ProcessHandle,
        IN OUT      PVOID *BaseAddress,
        IN OUT      PULONG NumberOfBytesToProtect,
        IN          ULONG NewAccessProtection,
        OUT         PULONG OldAccessProtection
);

typedef NTSTATUS (NTAPI* NtWriteVirtualMemory)(
        IN           HANDLE ProcessHandle,
        IN           PVOID BaseAddress,
        IN           PVOID Buffer,
        IN           ULONG NumberOfBytesToWrite,
        OUT OPTIONAL PULONG NumberOfBytesWritten
);

