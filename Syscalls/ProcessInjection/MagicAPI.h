//
// Created by j4ck on 10/10/23.
//
#ifndef MAGICAPI_H
#define MAGICAPI_H

#include <windows.h>
#include <winternl.h>


NTSTATUS MagicallyOpenProcess(OUT PHANDLE hProcess, IN DWORD PID);

NTSTATUS MagicallyAllocateVirtualMemoryEx(IN HANDLE hProcess, IN OUT LPVOID lpBuffer, IN OUT PSIZE_T szBufferSize, IN ULONG uAllocationType, IN ULONG uProtect);

NTSTATUS MagicallyProtectVirtualMemoryEx(IN HANDLE hProcess, IN OUT PVOID pBaseAddress, IN OUT PULONG puNumberOfBytesToProtect, IN ULONG puNewAccessProtection, OUT PULONG puOldAccessProtection);

NTSTATUS MagicallyWriteProcessMemory(IN HANDLE hProcess, IN PVOID pBaseAddress, IN PVOID pBuffer, ULONG uNumberOfBytesToWrite, PULONG puNumberOfBytesWritten);

NTSTATUS MagicallyCreateThread(OUT PHANDLE pThread, IN ACCESS_MASK desiredAccess, IN OPTIONAL POBJECT_ATTRIBUTES pObjectAttributes, IN HANDLE hProcess, IN PVOID StartRoutine, IN PVOID Argument, IN ULONG CreateFlags, IN SIZE_T ZeroBits, IN SIZE_T StackSize, IN SIZE_T MaximumStackSize, IN PVOID AttributeList);

typedef struct {
    NtOpenProcess               OpenProcessR;
    NtAllocateVirtualMemory     VirtualAllocExR;
    NtProtectVirtualMemory      VirtualProtectExR;
    NtWriteVirtualMemory        WriteVirtualMemory;
    NtCreateThreadEx            CreateThread;
} MAGIC_INSTANCE, *PMAGIC_INSTANCE;

extern PMAGIC_INSTANCE Instance; // Create shared global variable.

#endif // MAGICAPI_H
