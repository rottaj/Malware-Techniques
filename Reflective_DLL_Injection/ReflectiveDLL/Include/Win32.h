//
// Created by j4ck on 3/3/24.
//

#ifndef REFLECTIVE_WIN32_H
#define REFLECTIVE_WIN32_H
#include <windows.h>

typedef HMODULE (WINAPI* fnLoadLibraryA)(LPCSTR lpLibFileName);

typedef LPVOID (WINAPI* fnVirtualAlloc)(LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect);

typedef BOOL (WINAPI* fnVirtualProtect)(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect);

typedef BOOLEAN (WINAPI* fnRtlAddFunctionTable)(PRUNTIME_FUNCTION FunctionTable, DWORD EntryCount, DWORD64 BaseAddress);

typedef NTSTATUS (NTAPI* fnNtFlushInstructionCache)(HANDLE hProcess, PVOID BaseAddress, ULONG NumberOfBytesToFlush);

typedef BOOL(WINAPI* fnDllMain)(HINSTANCE, DWORD, LPVOID);

HMODULE GetModuleHandleWd(LPWSTR lpModuleName);


PVOID GetProcAddressWd(HMODULE hModule, LPCSTR lpProcName);
#endif //REFLECTIVE_WIN32_H
